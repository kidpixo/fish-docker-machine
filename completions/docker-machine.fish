function __fish_docker_machine_no_command
    set -l cmd (commandline -opc)
    test (count $cmd) -eq 1
end

function __fish_docker_machine_using_command
    set -l cmd (commandline -opc)
    set -q cmd[2]; and test "$argv[1]" = $cmd[2]
end

function __fish_docker_machine_help_commands
    for c in active config create env inspect ip kill ls regenerate-certs restart rm ssh scp start status stop upgrade url version help
        printf "%s\thelp\n" $c
    end
end

function __fish_docker_machine_machines --description 'Lists all available docker machines'
    command docker-machine ls | sed 1d | awk '{print sprintf("%s\t%s %s", $1, $3, $4);}'
end

function dockermachine_commands
    docker-machine help | sed -E -e '/^ *$/d;1,/Commands/d;$d;$d;s/^ *//' | tr -s '\t' | cut -f 1
end

function dockermachine_helps
     docker-machine help | sed -E -e '/^ *$/d;1,/Commands/d;$d;$d;s/^ *//' | tr -s '\t' | cut -f 2
 end

# commands
complete -f -c docker-machine -n '__fish_docker_machine_no_command' -a '(dockermachine_commands)'

# this doesn't work properly: no match between the two arrays generated by dockermachine_commands and dockermachine_helps
# complete -f -c docker-machine -n '__fish_docker_machine_no_command' -a '(dockermachine_commands)' -d '(dockermachine_helps)'

# machine
complete -f -c docker-machine -n '__fish_docker_machine_using_command env' -a '(__fish_docker_machine_machines)' -d 'machine'
complete -f -c docker-machine -n '__fish_docker_machine_using_command inspect' -a '(__fish_docker_machine_machines)' -d 'machine'
complete -f -c docker-machine -n '__fish_docker_machine_using_command ip' -a '(__fish_docker_machine_machines)' -d 'machine'
complete -f -c docker-machine -n '__fish_docker_machine_using_command kill' -a '(__fish_docker_machine_machines)' -d 'machine'
complete -f -c docker-machine -n '__fish_docker_machine_using_command restart' -a '(__fish_docker_machine_machines)' -d 'machine'
complete -f -c docker-machine -n '__fish_docker_machine_using_command rm' -a '(__fish_docker_machine_machines)' -d 'machine'
complete -f -c docker-machine -n '__fish_docker_machine_using_command ssh' -a '(__fish_docker_machine_machines)' -d 'machine'
complete -f -c docker-machine -n '__fish_docker_machine_using_command scp' -a '(__fish_docker_machine_machines)' -d 'machine'
complete -f -c docker-machine -n '__fish_docker_machine_using_command start' -a '(__fish_docker_machine_machines)' -d 'machine'
complete -f -c docker-machine -n '__fish_docker_machine_using_command status' -a '(__fish_docker_machine_machines)' -d 'machine'
complete -f -c docker-machine -n '__fish_docker_machine_using_command stop' -a '(__fish_docker_machine_machines)' -d 'machine'
complete -f -c docker-machine -n '__fish_docker_machine_using_command upgrade' -a '(__fish_docker_machine_machines)' -d 'machine'
complete -f -c docker-machine -n '__fish_docker_machine_using_command url' -a '(__fish_docker_machine_machines)' -d 'machine'
complete -f -c docker-machine -n '__fish_docker_machine_using_command version' -a '(__fish_docker_machine_machines)' -d 'machine'
complete -f -c docker-machine -n '__fish_docker_machine_using_command config' -a '(__fish_docker_machine_machines)' -d 'machine'

# help
complete -f -c docker-machine -n "__fish_docker_machine_using_command help" -a "(__fish_docker_machine_help_commands)"
